Ext.data.JsonP.http({"autodetected":{},"meta":{},"subclasses":[],"requires":[],"component":false,"aliases":{},"files":[{"href":null,"filename":"http.js"}],"tagname":"class","uses":[],"mixedInto":[],"members":[{"owner":"http","meta":{},"tagname":"method","name":"request","id":"method-request"}],"alternateClassNames":[],"parentMixins":[],"superclasses":[],"name":"http","id":"class-http","html":"<div><div class='doc-contents'><p>HTTP request class</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-request' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='http'>http</span><br/></div><a href='#!/api/http-method-request' class='name expandable'>request</a>( <span class='pre'>_params</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Standard HTTP Request ...</div><div class='long'><p>Standard HTTP Request</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>_params</span> : Object<div class='sub-desc'><p>The arguments for the method</p>\n<ul><li><span class='pre'>timeout</span> : Number<div class='sub-desc'><p>Timeout time, in milliseconds</p>\n</div></li><li><span class='pre'>type</span> : String<div class='sub-desc'><p>Type of request, \"GET\", \"POST\", etc</p>\n</div></li><li><span class='pre'>format</span> : String<div class='sub-desc'><p>Format of return data, one of \"JSON\", \"TEXT\", \"XML\" or \"DATA\"</p>\n</div></li><li><span class='pre'>url</span> : String<div class='sub-desc'><p>The URL source to call</p>\n</div></li><li><span class='pre'>headers</span> : Array<div class='sub-desc'><p>Array of request headers to send</p>\n</div></li><li><span class='pre'>data</span> : <div class='sub-desc'><p>The data to send</p>\n</div></li><li><span class='pre'>failure</span> : Function<div class='sub-desc'><p>A function to execute when there is an XHR error</p>\n</div></li><li><span class='pre'>success</span> : Function<div class='sub-desc'><p>A function to execute when when successful</p>\n</div></li><li><span class='pre'>passthrough</span> : Function<div class='sub-desc'><p>Parameters to pass through to the failure or success callbacks</p>\n</div></li></ul></div></li></ul></div></div></div></div></div></div></div>","mixins":[]});