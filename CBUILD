#!/bin/bash

##################################################
# Example way to run the script
#
# -a Application name
# -i The application ID
# -d Whether to auto-deploy to TestFlight
# -w Workspace (directory of ChariTi Titanium project)
# -t Target for generated IPA file
# -c The distribution certificate name
# -p The provisioning profile UUID
# -k TestFlight API token
# -z TestFlight team token
# -l TestFlight distribution list name
#
# ./CBUILD -a "ChariTi" -i "com.appcelerator.chariti" -w "/Users/{USER}/Documents/Titanium_Studio_Workspace/Chariti" -d true -t /Users/{USER}/Desktop/ChariTiBuild/ -c "{CERTIFICATE}" -p "{UUID}" -k "{TOKEN}" -z "{TOKEN}" -l "MyTeam"
##################################################


##################################################
# Define Variables
##################################################

WORKSPACE=~/Documents/Titanium_Studio_Workspace/Chariti
LIB=$WORKSPACE/app/lib
ASSETS=$WORKSPACE/app/assets
TARGET=~/Desktop/ChariTiBuild/

##################################################
# Retrieve arguments
##################################################

while getopts a:i:d:w:t:c:p:k:z:l: option
do
        case "${option}"
        in
        	a) APPLICATION=${OPTARG};;
        	i) ID=${OPTARG};;
        	d) DEPLOY=${OPTARG};;
        	w) WORKSPACE=${OPTARG};;
        	t) TARGET=${OPTARG};;
        	c) CERTIFICATE=${OPTARG};;
        	p) PROFILE=${OPTARG};;
        	k) TFAPI=${OPTARG};;
        	z) TFTEAM=${OPTARG};;
        	l) LIST=${OPTARG};;
        esac
done

##################################################
# Validate parameters
##################################################

if [ -z "$APPLICATION" ]
then
	echo "No application specified"
	exit
fi

if [ -z "$ID" ]
then
	echo "No application ID specified"
	exit
fi

##################################################
# Clean Titanium project
##################################################

echo "Building $APPLICATION"
cd $WORKSPACE
echo "Cleaning..."
titanium clean --platform ios

##################################################
# Move and edit files as appropriate
##################################################

echo "Updating files..."
rm -rf $ASSETS/iphone/
cp -r $LIB/data/iphone/ $ASSETS/iphone/
sed -i "" "s/\<id\>.*/\<id\>$ID\<\/id\>/" $WORKSPACE/tiapp.xml
sed -i "" "s/\<name\>.*/\<name\>$APPLICATION\<\/name\>/" $WORKSPACE/tiapp.xml
sed -i "" "s/#appid.*/#appid:$ID/" $WORKSPACE/manifest
sed -i "" "s/#appname.*/#appname:$APPLICATION/" $WORKSPACE/manifest

##################################################
# Compile Alloy project
##################################################

echo "Updated. Compiling Alloy..."
alloy compile

##################################################
# Build Titanium project
##################################################

echo "Compiled. Building..."
if $DEPLOY
then
	titanium build --platform ios --force --target dist-adhoc --distribution-name "$CERTIFICATE" --pp-uuid "$PROFILE" --output-dir $TARGET
else
	titanium build --platform ios --force
fi

echo "$i Complete"
terminal-notifier -message "$APPLICATION has been compiled" -title "ChariTi Compile Completed"

##################################################
# Deploy to TestFlight
##################################################

if $DEPLOY
then
	echo "Uploading $APPLICATION to TestFlight..."
	
	chmod +x "$TARGET/$APPLICATION.ipa"
	
	/usr/bin/curl "http://testflightapp.com/api/builds.json" \
		-F file=@"$TARGET/$APPLICATION.ipa" \
		-F api_token="$TFAPI" \
		-F team_token="$TFTEAM" \
		-F notes="Build uploaded automatically from ChariTi Builder." \
		-F notify=False \
		-F distribution_lists="$LIST"
	
	terminal-notifier -message "$APPLICATION has been uploaded" -title "TestFlight Upload Completed"
fi